name: Continuous Integration

on:
  push:
    branches: [staging, master]
  pull_request:
  merge_group:
  workflow_call:
    inputs:
      sha:
        description: The commit SHA to run the workflow on
        required: false
        type: string
    secrets:
      codecov_token:
        description: Codecov token
        required: true
      rails_master_key:
        description: The Rails master key
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.sha }}

      - name: Build test image
        uses: guidojw/actions/build-docker-image@3ad963828827110a6b716a011f242bf01fdf1db4 # v1.4.7
        with:
          file: Dockerfile
          build-args: |
            RAILS_ENV=test
          name: app

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    services:
      db:
        image: postgres:14.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.sha }}

      - name: Add problem matchers
        run: |
          echo '::add-matcher::.github/problem-matchers/actionlint.json'
          echo '::add-matcher::.github/problem-matchers/eslint-stylish.json'
          echo '::add-matcher::.github/problem-matchers/rubocop.json'

      - name: Download actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) 1.7.7

      - name: Load test image
        uses: guidojw/actions/load-docker-image@3ad963828827110a6b716a011f242bf01fdf1db4 # v1.4.7
        with:
          name: app

      - name: Lint
        run: |
          EXIT_STATUS=0
          ./actionlint \
          -ignore 'property "gh_app_private_key" is not defined' \
          -ignore 'SC2153:' \
          -ignore 'property "sha" is not defined in object type {}' || \
          EXIT_STATUS=$?
          docker run \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -e POSTGRES_HOST=localhost \
          --network=host \
          app bin/ci.sh lint || \
          EXIT_STATUS=$?
          exit $EXIT_STATUS

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    services:
      db:
        image: postgres:14.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.sha }}

      - name: Add problem matchers
        run: |
          echo '::add-matcher::.github/problem-matchers/rspec.json'

      - name: Load test image
        uses: guidojw/actions/load-docker-image@3ad963828827110a6b716a011f242bf01fdf1db4 # v1.4.7
        with:
          name: app

      - name: Test
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          mkdir coverage
          docker run \
            -e RAILS_MASTER_KEY \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_HOST=localhost \
            --network=host \
            -v "$(pwd)"'/coverage:/app/coverage' \
             app bin/ci.sh spec


      - name: Upload coverage report to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage report artifact
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: coverage
          path: coverage/
          if-no-files-found: error
